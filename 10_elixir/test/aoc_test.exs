defmodule AocTest do
  use ExUnit.Case

  @input """
  #...##.####.#.......#.##..##.#.
  #.##.#..#..#...##..##.##.#.....
  #..#####.#......#..#....#.###.#
  ...#.#.#...#..#.....#..#..#.#..
  .#.....##..#...#..#.#...##.....
  ##.....#..........##..#......##
  .##..##.#.#....##..##.......#..
  #.##.##....###..#...##...##....
  ##.#.#............##..#...##..#
  ###..##.###.....#.##...####....
  ...##..#...##...##..#.#..#...#.
  ..#.#.##.#.#.#####.#....####.#.
  #......###.##....#...#...#...##
  .....#...#.#.#.#....#...#......
  #..#.#.#..#....#..#...#..#..##.
  #.....#..##.....#...###..#..#.#
  .....####.#..#...##..#..#..#..#
  ..#.....#.#........#.#.##..####
  .#.....##..#.##.....#...###....
  ###.###....#..#..#.....#####...
  #..##.##..##.#.#....#.#......#.
  .#....#.##..#.#.#.......##.....
  ##.##...#...#....###.#....#....
  .....#.######.#.#..#..#.#.....#
  .#..#.##.#....#.##..#.#...##..#
  .##.###..#..#..#.###...#####.#.
  #...#...........#.....#.......#
  #....##.#.#..##...#..####...#..
  #.####......#####.....#.##..#..
  .#...#....#...##..##.#.#......#
  #..###.....##.#.......#.##...##
  """

  test "1.1" do
    test_input = """
    .#..#
    .....
    #####
    ....#
    ...##
    """

    assert({{3, 4}, _} |> match?(Aoc.best_location(test_input)))
  end

  test "1.2" do
    test_input = """
    ......#.#.
    #..#.#....
    ..#######.
    .#.#.###..
    .#..#.....
    ..#....#.#
    #..#....#.
    .##.#..###
    ##...#..#.
    .#....####
    """

    assert({{5, 8}, _} |> match?(Aoc.best_location(test_input)))
  end

  test "1.3" do
    test_input = """
    #.#...#.#.
    .###....#.
    .#....#...
    ##.#.#.#.#
    ....#.#.#.
    .##..###.#
    ..#...##..
    ..##....##
    ......#...
    .####.###.
    """

    assert({{1, 2}, _} |> match?(Aoc.best_location(test_input)))
  end

  test "1.4" do
    test_input = """
    .#..#..###
    ####.###.#
    ....###.#.
    ..###.##.#
    ##.##.#.#.
    ....###..#
    ..#.#..#.#
    #..#.#.###
    .##...##.#
    .....#.#..
    """

    assert({{6, 3}, _} |> match?(Aoc.best_location(test_input)))
  end

  test "1.5" do
    test_input = """
    .#..##.###...#######
    ##.############..##.
    .#.######.########.#
    .###.#######.####.#.
    #####.##.#.##.###.##
    ..#####..#.#########
    ####################
    #.####....###.#.#.##
    ##.#################
    #####.##.###..####..
    ..######..##.#######
    ####.##.####...##..#
    .#####..#.######.###
    ##...#.##########...
    #.##########.#######
    .####.#.###.###.#.##
    ....##.##.###..#####
    .#.#.###########.###
    #.#.#.#####.####.###
    ###.##.####.##.#..##
    """

    assert({{11, 13}, _} |> match?(Aoc.best_location(test_input)))
  end

  test "2.1" do
    test_input = """
.....
..#..
#####
..#..
.....
"""

    assert(Aoc.zap(test_input) == :mu)
  end
  test "part_one", do: assert(Aoc.best_location(@input) == {{17, 22}, 288})
  test "part_two", do: assert(Aoc.zap(@input) == :mu)
end
